code . 打开vsc编辑器

ctrl+alt+T	打开命令行
pwd	在命令行内写	查看当前位置
ls	查看当前位置的文件(不包括隐藏文件)
ls -a 查看所有文件(包括隐藏文件)
ls --help	帮助
ls -A 查看所有的隐藏文件(比较-a查看的更多一些,一般不会用到)
clear 清空当前的所有内容	(被清除的内容是在上面而不是真正的被清空)
cd	进入文件夹(相对路径)
cd ../	返回上一个目录
touch 文件名(加上文件扩展名)	新建文档	如果想要创建多个就在名字后面添加空格就可以
mkdir 文件夹名		创建文件夹 如果想要创建多个在名字的后面名后面添加空格就可以
cat 文件名	查看文件内容
rm 文件名	删除
rm 文件夹名 -r	删除文件夹
rm -rf  文件名(或者文件夹)	强制删除
cp 文件名 文件夹名	复制某个文件到文件夹内	
cp -r 文件夹名 新文件夹名	 复制文件夹到新的文件夹内
cp 文件名 新文件名	重命名
mv 文件名(或者文件夹名)	剪切
~	代表用户主目录
/	代表用户根目录
./	代表当前目录
ctrl+c	结束当前命令

git log 查看版本号
git log --pretty=oneline	查看版本信息 每个版本信息在一行显示
git pull 把网上的版本拉倒本地,克隆网上的仓库到本地
git 基本命令
在Linux 上安装git 	git在终端输入	sudo apt-get install git (意思是安装git)

windows 上安装git bash

在终端输入git clone 网上的那个地址 然后回车就可以把网上的仓库克隆到本地了


文件上传到仓库
git add .	将你的修改让git记录
git status	查看当前仓库的文件状态	(上传的时候不需要)
git commit -m '版本留言(写什么都可以但是必须写)' 	
git push	本地和网上同步  如果网上的更新和本地要提交的修改发生冲突 git o pull 会失效 需要在冲突的文件下手动解决冲突 手动解决冲突相当于再次修改 所以需要再次git add. git commit -m '版本信息' git push 提交信息


添加ssh  生成秘钥(方便不需要多次上传github不需要大账号和密码)
命令行 ssh-keygen 一直回车 生成一个图片后	输如cd ~ 然后ls -a 看到有.ssh 文件 输入 cd .ssh 然后ls 看到有两个文件 然后cat id_rsa.pub看到出现很多行的一个密码,复制它,然后点开github 点击设置,然后点击ssh和gpg那个里面的ssh keys项,把上面复制的密码粘贴到这边,然后上传

在本地新建仓库的步骤
把本地的文件夹建好
在网上新建仓库最好和本地的文件夹名相同
Initialize this repository with a README前面的不需要勾选
新建仓库 按照网上的步骤来就可以了 第一步是git init 初始化本地文件夹到git仓库


git reset --hard HEAD^	本地仓库版本回退到上一个版本	多个^意思是返回多个版本
git reset --hard 版本号  本地参考回退到与版本号相对应的版本
git push -f	强制网上和本地仓库同步 覆盖网上版本
git reflog	查看git记录过得所有历史版本
